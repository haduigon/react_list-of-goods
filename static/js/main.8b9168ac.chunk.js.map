{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","wordOne","wordTwo","SortType2","localeCompare","length","getSortChoice","reverse","App","state","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","statePrev","reset","NONE","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2BK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAczB,OAZAG,EAAaC,MACX,SACEC,EAASC,GADX,OAzBJ,SAAuBD,EAAiBC,EAAiBC,GACvD,QAASA,GACP,KAAK,EAML,QACE,OAAO,EALT,KAAK,EACH,OAAOF,EAAQG,cAAcF,GAC/B,KAAK,EACH,OAAOD,EAAQI,OAASH,EAAQG,QAoB7BC,CACHL,EAASC,EAASL,OAIH,IAAfC,GACFC,EAAaQ,UAGRR,G,SA1CJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkDE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAU,GAHd,EAMEa,eAAiB,WACf,EAAKC,SAAS,CAAEb,YAAY,EAAOD,SAAUJ,EAASmB,YAP1D,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEb,YAAY,EAAOD,SAAUJ,EAASqB,UAX1D,EAcEP,QAAU,WACR,EAAKI,UAAS,SAAAI,GAAS,MAAK,CAC1BjB,YAAaiB,EAAUjB,WAAYD,SAAUkB,EAAUlB,cAhB7D,EAoBEmB,MAAQ,WACN,EAAKL,SAAS,CAAEb,YAAY,EAAOD,SAAUJ,EAASwB,QArB1D,4CAwBE,WACE,IAAMjB,EAAOkB,KAAKT,MAAMZ,SAExB,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAoB,IAATnB,EACP,iBAAmB,0BACvBqB,QAASH,KAAKR,eAJhB,iCASA,wBACEU,KAAK,SACLD,UAAoB,IAATnB,EACP,oBAAsB,6BAC1BqB,QAASH,KAAKL,aAJhB,4BASA,wBACEO,KAAK,SACLD,WAAqC,IAA1BD,KAAKT,MAAMX,WAClB,oBAAsB,6BAC1BuB,QAASH,KAAKX,QAJhB,qBASyB,IAAxBW,KAAKT,MAAMZ,WAA4C,IAA1BqB,KAAKT,MAAMX,WACvC,wBACEsB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKF,MAHhB,mBAOE,QAIN,6BACE,6BACGrB,EAAkBD,EAAiBwB,KAAKT,OAAOa,KAC9C,SAACC,GAAD,OAAkB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAxExD,GAAyBC,IAAMC,WChE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8b9168ac.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getSortChoice(wordOne: string, wordTwo: string, SortType2: SortType) {\n  switch (+SortType2) {\n    case 0:\n      return 0;\n    case 1:\n      return wordOne.localeCompare(wordTwo);\n    case 2:\n      return wordOne.length - wordTwo.length;\n    default:\n      return 0;\n  }\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort(\n    (\n      wordOne, wordTwo,\n    ) => getSortChoice(\n      wordOne, wordTwo, sortType,\n    ),\n  );\n\n  if (isReversed === true) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component <{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ isReversed: false, sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ isReversed: false, sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(statePrev => ({\n      isReversed: !statePrev.isReversed, sortType: statePrev.sortType,\n    }));\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const sort = this.state.sortType;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sort === 1\n              ? 'button is-info' : 'button is-info is-light'}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sort === 2\n              ? 'button is-success' : 'button is-success is-light'}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.isReversed === true\n              ? 'button is-warning' : 'button is-warning is-light'}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {this.state.sortType !== 0 || this.state.isReversed === true ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          ) : null}\n\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(\n              (good: string) => <li data-cy=\"Good\" key={good}>{good}</li>,\n            )}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}