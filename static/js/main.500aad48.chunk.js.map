{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","wordOne","wordTwo","localeCompare","length","reverse","App","state","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","statePrev","reset","NONE","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAoBzB,OAlBAG,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQL,GACN,KAAK,EAML,QACE,OAAO,EALT,KAAK,EACH,OAAOI,EAAQE,cAAcD,GAC/B,KAAK,EACH,OAAOD,EAAQG,OAASF,EAAQE,YAOnB,IAAfN,GACFC,EAAaM,UAGRN,G,SArCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAMa,EAAb,4MACEC,MAAQ,CACNT,YAAY,EACZD,SAAU,GAHd,EAMEW,eAAiB,WACf,EAAKC,SAAS,CAAEX,YAAY,EAAOD,SAAUJ,EAASiB,YAP1D,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEX,YAAY,EAAOD,SAAUJ,EAASmB,UAX1D,EAcEP,QAAU,WACR,EAAKI,UAAS,SAAAI,GAAS,MAAK,CAC1Bf,YAAae,EAAUf,WAAYD,SAAUgB,EAAUhB,cAhB7D,EAoBEiB,MAAQ,WACN,EAAKL,SAAS,CAAEX,YAAY,EAAOD,SAAUJ,EAASsB,QArB1D,4CAwBE,WACE,IAAMf,EAAOgB,KAAKT,MAAMV,SAExB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAoB,IAATjB,EACP,iBAAmB,0BACvBmB,QAASH,KAAKR,eAJhB,iCASA,wBACEU,KAAK,SACLD,UAAoB,IAATjB,EACP,oBAAsB,6BAC1BmB,QAASH,KAAKL,aAJhB,4BASA,wBACEO,KAAK,SACLD,WAAqC,IAA1BD,KAAKT,MAAMT,WAClB,oBAAsB,6BAC1BqB,QAASH,KAAKX,QAJhB,qBASyB,IAAxBW,KAAKT,MAAMV,WAA4C,IAA1BmB,KAAKT,MAAMT,WACvC,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKF,MAHhB,mBAOE,QAIN,6BACE,6BACGnB,EAAkBD,EAAiBsB,KAAKT,OAAOa,KAC9C,SAACC,GAAD,OAAkB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAxExD,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.500aad48.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((wordOne, wordTwo) => {\n    switch (sortType) {\n      case 0:\n        return 0;\n      case 1:\n        return wordOne.localeCompare(wordTwo);\n      case 2:\n        return wordOne.length - wordTwo.length;\n      default:\n        return 0;\n    }\n  });\n  // Sort and reverse goods if needed\n\n  if (isReversed === true) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component <{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ isReversed: false, sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ isReversed: false, sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(statePrev => ({\n      isReversed: !statePrev.isReversed, sortType: statePrev.sortType,\n    }));\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const sort = this.state.sortType;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sort === 1\n              ? 'button is-info' : 'button is-info is-light'}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sort === 2\n              ? 'button is-success' : 'button is-success is-light'}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.isReversed === true\n              ? 'button is-warning' : 'button is-warning is-light'}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {this.state.sortType !== 0 || this.state.isReversed === true ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          ) : null}\n\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(\n              (good: string) => <li data-cy=\"Good\" key={good}>{good}</li>,\n            )}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}